Day 5 Assignment
1. write a menu driven program to perform following tasks
1. Add person"<<endl;
2. Search by id"<<endl;
3. display all"<<endl;
4. Search by name"<<endl;
5. sort by id"<<endl;
6. sort by name"<<endl;
7. modify address by id"<<endl;
8. exit

store array of person objects in PersonService class, 
for each menu option create static method in PersonService class

2.Write a program to maintain student information. For each student
 store studid, name, m1, m2 and m3 
 (marks of 3 subjects, use array of int to store marks ).
 Accept information for 2 students and display it as follows.

Student Details:
____________
Student Id-->11
Name: Divya
M1 :    78
M2:     86
M3:     89

3.	Write a menu driven program to maintain student information.
 Modify  Student class created in previous assignment.  
 Add a member gpa in student class, add a function in student class to return GPA of a student
    calculateGPA()
      gpa=(1/3)*m1+(1/2)*m2+(1/4)*m3
Create an array to store Multiple students.
1. Add new student
2. Display All Student
2. Search by id
3. Search by name
4. sort by m1 marks
4. calculate GPA of a student
5. Exit

5. Refer inheritancedemo shared with you and do the trial for the following
	1. Run the program and note the output
	2. Add ContractEmp.h and ContractEmp.cpp file, 

	add following code in main function, test ContractEmp class working correctly  
	   ContractEmp ob(11,"Varsha","HR","Programmer",34,2456);
	   ob.display()
	   ContractEmp *cemp=new ContractEmp(12,"Sonali","Admin","mgr",45,1443);
	   cemp->display();
	   Employee *emp2=new ContractEmp(13,"Rama","Admin","mgr",5,1678);
	   emp2->display();
	   
	3. change display function and destructor declaration in Employee.h file
		virtual void display();
		virtual ~Employee();
		Run main method and check is there any change in the output. make a note of it.
	
	
4. Write class hirarchy for the following. and test all classes are working correctctly 
	Write a program to manage student information, Student can be Msc student or 
	student can be PHD Student. for all students store id, name,address, passing percentage,
	m1,m2,m3, degree the student receives. for MSc student store marks for special subject,language marks
	for PHD student store name of thesis, and marks for thesis

5. Design a system for XYZ Bank for storing account details, 
Every account will have type either saving account or current account 
For every account interest rate and minimum balance need to be stored.
Interest rate for saving account is 4% and for current account 1%
Minimum balance for saving account will be 20000 and current account will be 1000
For each account store account holder details(fname, lname, mobile, email) 
id will be autogenerated 3 letters of fname, 3letters of lname, count of account.
 
If itâ€™s a saving account, then store chequebooknumber
If current account then store number of transactions/day, number of transactions will be different 
for every account based on average annual balance in the account and will keep on changing based on how customer maintains the balance in the account.

Day 6 Assignment
1. modify Account class assignmnet
create AccountService class and TestAccount.cpp
in main method show following menu. and add all static functions to perform each operation
"\n--- Account Management ---\n";
        std::cout << "1. Add new account";
        std::cout << "3. Display All Accounts\n";
        std::cout << "4. Search by account number\n";
        std::cout << "5. Search by Name\n";
        std::cout << "6. Sort Accounts by balance\n";
        std::cout << "7. Display All Saving Account\n";
        std::cout << "8. Display All Current Account\n";
        std::cout << "9. Exit\n";


2. modify Student class assignmnet
create StudentService class and TestStudent.cpp
in main method show following menu. and add all static functions to perform each operation
"\n--- Student Management ---\n";
        std::cout << "1. Add new Student";
        std::cout << "3. Display All Student\n";
        std::cout << "4. Search by Id\n";
        std::cout << "5. Search by Name\n";
        std::cout << "6. Sort Students by m1 marks\n";
        std::cout << "7. Display All MSC Student\n";
        std::cout << "8. Display All PHD Student\n";
        std::cout << "9. Exit\n";